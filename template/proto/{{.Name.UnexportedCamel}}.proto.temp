syntax = "proto3";
package trpc.{{.Ctrl.AppName}}.{{.Ctrl.ServerName}};

//default go package name 
option  go_package ="git.code.oa.com/trpcprotocol/tab/{{.Ctrl.ServerName}}";

// 不建议使用 google/protobuf/any.proto 
// any强依赖package type.googleapis.com/_packagename_._messagename_.   
// https://developers.google.com/protocol-buffers/docs/proto3#any 

// tRPC-Go数据校验模块（**移除注释使用**） 
// 介绍：http://km.oa.com/articles/view/438840 
// import "trpc/common/validate.proto";

message Create{{.Name.ExportedCamel}}Request {
  string businessCode = 1;
  {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}} = 2;
}

message {{.Name.ExportedCamel}} {
  Metadata meta = 1;
  {{.Name.ExportedCamel}}Spec {{.Name.UnexportedCamel}}Spec = 2;
}

message Metadata {
  string name = 1; // 英文名
  string title = 2;
  int64 id = 3;
  int64 createTimestamp = 4;
  int64 modifyTimestamp = 5;
  string creator = 6;
  string modifier = 7;
  map<string, string> label = 8;
  map<string, value> namespace = 9;
}

message value {
  repeated string isolation = 1;
}

enum Status {
  UNKNOWN_STATUS = 0;
  RUNNING_STATUS = 1; // 运作状态
  STOPPING_STATUS = 2; // 暂停状态
  FINISH_STATUS = 3; // 下线状态
}

enum {{.Name.ExportedCamel}}Type {
  UNKNOWN_TASK_TYPE = 0;
  TIMER = 1; // 定时任务
  ONCE = 2; // 一次行任务
}

// {{.Name.ExportedCamel}} 对象非标准属性
message {{.Name.ExportedCamel}}Spec {

}

// TODO common proto define
enum Code {
  SUCCESS = 0; // 成功 唯一一个零值有意义的枚举
  INVALID_PARAM = 10001;
  SERVER_BROKEN = 20000;
  DB_BROKEN = 20001;
}

// TODO common proto define
message CommonResult {
  Code code = 1;
  string message = 2;
}

message Create{{.Name.ExportedCamel}}Response {
  CommonResult result = 1;;
  {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}} = 10;
}

message Update{{.Name.ExportedCamel}}Request {
  string businessCode = 1;
  {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}} = 2;
}

message Update{{.Name.ExportedCamel}}Response {
  CommonResult result = 1;
  {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}} = 10;
}

message Get{{.Name.ExportedCamel}}Request {
  int64 id = 1;
}

message Get{{.Name.ExportedCamel}}Response {
  CommonResult result = 1;
  {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}} = 10;
}

message List{{.Name.ExportedCamel}}Request {
  string businessCode = 1;
  map<string, string> where= 2;
  Page page = 3;
}

message Page {
  int64 limit = 1;
  int64 offset = 2;
}

message List{{.Name.ExportedCamel}}Response {
  CommonResult result = 1;
  Page page = 10;
  {{.Name.ExportedCamel}}List {{.Name.UnexportedCamel}}List = 11;
}

message {{.Name.ExportedCamel}}List {
  int64 total = 1;
  repeated {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}}List = 10;
}

message Del{{.Name.ExportedCamel}}Request {
  int64 id = 1;
}

message Del{{.Name.ExportedCamel}}Response {
  CommonResult result = 1;
  {{.Name.ExportedCamel}} {{.Name.UnexportedCamel}} = 10;
}

service {{.Name.ExportedCamel}}Service {
  rpc Create (Create{{.Name.ExportedCamel}}Request) returns (Create{{.Name.ExportedCamel}}Response);
  rpc Update (Update{{.Name.ExportedCamel}}Request) returns (Update{{.Name.ExportedCamel}}Response);
  rpc Get (Get{{.Name.ExportedCamel}}Request) returns (Get{{.Name.ExportedCamel}}Response);
  rpc List (List{{.Name.ExportedCamel}}Request) returns (List{{.Name.ExportedCamel}}Response);
  rpc Del (Del{{.Name.ExportedCamel}}Request) returns (Del{{.Name.ExportedCamel}}Response);
}
