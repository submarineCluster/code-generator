// Package server generate by code-generator
package server

import (
	"context"

	"github.com/pkg/errors"

	"github.com/submarineCluster/code-component/model/option"
	pb "git.code.oa.com/trpcprotocol/tab/{{.Ctrl.ServerName}}"
)

//List ...
func (s *{{.Name.ExportedCamel}}Server) List(ctx context.Context, opts ...option.ListOpt) (*pb.{{.Name.ExportedCamel}}List, error) {

	options := option.NewListOption()
	for _, opt := range opts {
		options = opt(options)
	}

	{{.Name.UnexportedCamel}}List, err := s.S.List(ctx, options)
	if err != nil {
		return nil, errors.Wrapf(err, "List")
	}

	result := &pb.{{.Name.ExportedCamel}}List{}
	result.Total = {{.Name.UnexportedCamel}}List.Total
	for _, {{.Name.UnexportedCamel}} := range {{.Name.UnexportedCamel}}List.Data {
		result.{{.Name.ExportedCamel}}List = append(result.{{.Name.ExportedCamel}}List, {{.Name.UnexportedCamel}}.Transform{{.Name.ExportedCamel}}())
	}

	return result, nil
}
